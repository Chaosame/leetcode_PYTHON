```
import heapq
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:
        # 题目意思在于频数各不相同
        fre_map = {}
        heap_ = []
        for item in nums:
            if item not in fre_map:
                fre_map[item] = 1
            else:
                fre_map[item] += 1
        fre_list = list(fre_map.values())
        for i in range(k):
            heapq.heappush(heap_,fre_list[i]) # 堆顶恰为第k大的频率
        for k in range(k,len(fre_list)):
            if fre_list[k]>heap_[0]: # 如果k-len中间有比顶大的说明顶不是第k，需要交换
                heapq.heapreplace(heap_,fre_list[k])
        return [key for key,value in fre_map.items() if value in heap_]
```